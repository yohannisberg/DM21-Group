{"version":3,"sources":["bundle.js","app.js","controllers/accountCtrl.js","controllers/commentsCtrl.js","controllers/loadingCtrl.js","controllers/mainCtrl.js","controllers/navBarCtrl.js","controllers/playVideo.js","controllers/searchCtrl.js","controllers/settingsCtrl.js","controllers/uploadVideoCtrl.js","controllers/userVideos.js","directives/commentsDir.js","directives/fileUploader.js","directives/footerDir.js","directives/navBar.js","services/mainService.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","otherwise","state","url","templateUrl","controller","$scope","mainService","getAllComments","console","log","id","arr","getComments","then","comments","res","data","addComment","postComment","text","$timeout","loadB","loadG","loadR","$state","login","playVideo","videoLink","uri","video","clickedVideo","transferVideo","replace","getId","go","getVideosByChannel","staffpicks","profilePicAndUpload","logInNavBar","mainDropDown","logout","loggedOut","searchQuery","searchVideos","query","searchedVideo","response","getUser","checkUser","name","profilePicture","pictures","link","userName","stripDuplicates","Set","a","showButton","arr2","getChannelVideos","unshift","arr3","length","document","querySelector","innerHTML","getVideo","showMore","i","push","getVideoById","media","beforeDate","created_time","date","newD","slice","splitDate","split","noDash","filter","numb","forMoment","join","momentTime","moment","fromNow","dateTest","getVideos","videos","videoData","getVideoID","page","num","uploadVideo","uploadVid","privacy","firstCap","toUpperCase","restofWord","splice","scope","time","parseInt","minutes","Math","floor","seconds","toString","userVideos","play","displayWatchLaterList","getWatchLaterList","list","resp","directive","restrict","$parse","element","attrs","model","fileUploader","modelSetter","assign","bind","$apply","files","service","$http","serverUrl","vm","shift","x","method","channel","getAccessToken","addToWatchLater"],"mappings":"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","file":"bundle.js","sourcesContent":["'use strict';\n\nangular.module('vimeoApp', [\"ui.router\"]).config(function ($stateProvider, $urlRouterProvider) {\n\n    $urlRouterProvider.otherwise('/');\n\n    $stateProvider.state('home', {\n        url: '/',\n        templateUrl: './views/home.html',\n        controller: 'mainCtrl'\n    }).state('userVideos', {\n        url: '/userVideos',\n        templateUrl: './views/userVideos.html',\n        controller: 'userVideosCtrl'\n    }).state('search', {\n        url: '/search',\n        templateUrl: './views/search.html',\n        controller: 'searchCtrl'\n    }).state('edit', {\n        url: '/edit',\n        templateUrl: './views/editvideo.html',\n        controller: 'editCtrl'\n    }).state('playvideo', {\n        url: '/playvideo',\n        templateUrl: './views/playVid.html',\n        controller: 'playVideo'\n    }).state('uploadVideo', {\n        url: '/uploadVideo',\n        templateUrl: './views/uploadVideo.html',\n        controller: 'uploadVideoCtrl'\n    }).state('loading', {\n        url: '/searching',\n        templateUrl: './views/loading.html',\n        controller: 'loadingCtrl'\n    }).state('watchLater', {\n        url: '/watchlater',\n        templateUrl: './views/watchLater.html',\n        controller: 'userVideos'\n    });\n});\n'use strict';\n\nangular.module('vimeoApp').controller('accountCtrl', function ($scope) {});\n'use strict';\n\nangular.module('vimeoApp').controller('commentsCtrl', function ($scope, mainService) {\n\n    $scope.getAllComments = function () {\n        console.log('hi');\n        var id = mainService.arr[0];\n        mainService.getComments(id).then(function (res) {\n            $scope.comments = res.data.data;\n            console.log($scope.comments);\n        });\n    };\n    $scope.addComment = function () {\n        var id = mainService.arr[0];\n        console.log(id);\n        mainService.postComment(id, $scope.text).then(function (res) {\n            $scope.getAllComments();\n            $scope.text = '';\n        });\n    };\n\n    $scope.getAllComments();\n});\n'use strict';\n\nangular.module('vimeoApp').controller('loadingCtrl', function ($scope, $timeout) {\n\n    $scope.loadB = true;\n    $scope.loadG = false;\n    $scope.loadR = false;\n\n    $timeout();\n\n    $timeout(function () {\n        $scope.loadG = true;\n    }, 500);\n\n    $timeout();\n\n    $timeout(function () {\n        $scope.loadR = true;\n    }, 1000);\n\n    $timeout();\n});\n'use strict';\n\nangular.module('vimeoApp').controller('mainCtrl', function ($scope, mainService, $state) {\n\n    $scope.login = function () {\n        mainService.login().then(function (res) {\n            $scope.data = res.data;\n        });\n    };\n    $scope.login();\n\n    $scope.playVideo = function (videoLink, uri, video) {\n        mainService.clickedVideo(videoLink);\n        mainService.transferVideo(video);\n        var id = uri.replace(/\\D/g, '');\n        mainService.getId(id);\n        $state.go('playvideo');\n    };\n\n    mainService.getVideosByChannel('staffpicks').then(function (res) {\n        $scope.staffpicks = res.data.data;\n    });\n});\n'use strict';\n\nangular.module('vimeoApp').controller('navBarCtrl', function ($scope, mainService, $state) {\n\n    $scope.profilePicAndUpload = false;\n    $scope.logInNavBar = true;\n    $scope.mainDropDown = true;\n\n    $scope.login = function () {\n        mainService.login().then(function (res) {\n            $scope.data = res.data;\n        });\n    };\n    $scope.logout = function () {\n        mainService.logout().then(function (res) {\n            var loggedOut = res.data;\n            $scope.logInNavBar = loggedOut;\n            $scope.profilePicAndUpload = !loggedOut;\n            $scope.mainDropDown = loggedOut;\n            $state.go('home');\n        });\n    };\n    $scope.searchQuery = function (query) {\n        $state.go('loading');\n        mainService.searchVideos(1, query).then(function (response) {\n            mainService.searchedVideo(response.data.data);\n            $state.go('search');\n            $scope.query = '';\n        });\n    };\n    $scope.getUser = function () {\n        $state.go('uploadVideo');\n        mainService.getUser().then(function (res) {});\n    };\n    $scope.checkUser = function () {\n        mainService.getUser().then(function (res) {\n            if (res.data.name) {\n                $scope.logInNavBar = false;\n                $scope.profilePicture = res.data.pictures[3].link;\n                $scope.userName = res.data.name;\n                $scope.profilePicAndUpload = true;\n            }\n        });\n    };\n    $scope.checkUser();\n});\n'use strict';\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nangular.module('vimeoApp').controller('playVideo', function ($scope, mainService, $state) {\n    var stripDuplicates = function stripDuplicates(a) {\n        return [].concat(_toConsumableArray(new Set(a)));\n    };\n    $scope.showButton = true;\n    $scope.video = mainService.video;\n    mainService.getVideosByChannel('staffpicks').then(function (res) {\n        $scope.arr2 = res.data.data;\n    });\n    $scope.getChannelVideos = function () {\n        mainService.getVideosByChannel('music').then(function (res) {\n            $scope.arr = res.data.data;\n            $scope.arr.unshift(mainService.arr3[0]);\n            $scope.arr = stripDuplicates($scope.arr);\n            $scope.playVideo = function (videoLink, uri, video) {\n                mainService.clickedVideo(videoLink);\n                var id = uri.replace(/\\D/g, '');\n                mainService.getId(id);\n                $scope.video = mainService.arr2[mainService.arr2.length - 1];\n                document.querySelector(\".video-window\").innerHTML = $scope.video;\n                $scope.getVideo();\n                $scope.getAllComments();\n                $scope.arr.unshift(video);\n                $scope.arr = stripDuplicates($scope.arr);\n            };\n            $scope.showMore = function () {\n                $scope.showButton = false;\n                for (var i = 0; i < $scope.arr2.length; i++) {\n                    $scope.arr.push($scope.arr2[i]);\n                };\n            };\n        });\n    };\n    $scope.getChannelVideos();\n    $scope.getVideo = function () {\n        var id = mainService.arr[0];\n        mainService.getVideoById(id).then(function (res) {\n            $scope.media = res.data;\n            console.log('$scope.media', $scope.media);\n            var beforeDate = res.data.created_time,\n                date = function date(beforeDate) {\n                var newD = beforeDate.slice(0, 10),\n                    splitDate = newD.split(''),\n                    noDash = splitDate.filter(function (numb) {\n                    return numb !== '-';\n                });\n                var forMoment = noDash.join(\"\");\n                $scope.momentTime = moment(forMoment, \"YYYYMMDD\").fromNow();\n            };\n            date(beforeDate);\n            $scope.dateTest = moment(\"20170601\", \"YYYYMMDD\").fromNow();\n        });\n    };\n    $scope.getVideo();\n    $scope.getAllComments = function () {\n        var id = mainService.arr[0];\n        mainService.getComments(id).then(function (res) {\n            $scope.comments = res.data.data;\n        });\n    };\n    $scope.addComment = function () {\n        var id = mainService.arr[0];\n        mainService.postComment(id, $scope.text).then(function (res) {\n            $scope.getAllComments();\n        });\n    };\n\n    $scope.getAllComments();\n\n    document.querySelector(\".video-window\").innerHTML = $scope.video;\n});\n'use strict';\n\nangular.module('vimeoApp').controller('searchCtrl', function ($scope, mainService, $state) {\n\n    var getVideos = function getVideos() {\n        $scope.videos = mainService.videoData;\n    };\n    getVideos();\n\n    $scope.getVideoID = function (id) {\n        mainService.getId(id);\n    };\n    $scope.playVideo = function (videoLink, uri, i) {\n        mainService.clickedVideo(videoLink);\n        var id = uri.replace(/\\D/g, '');\n        mainService.getId(id);\n        mainService.transferVideo($scope.videos[i]);\n        $state.go('playvideo');\n    };\n    $scope.page = function (num) {\n        mainService.searchVideos(num, mainService.query).then(function (res) {\n            $scope.videos = res.data.data;\n            console.log($scope.videos);\n        });\n    };\n    // $scope.addToWatchLaterList = () => {\n    //     mainService.getVideoById\n    //     mainService.addToWatchLater(video, id).then(res => {\n    //         console.log(res);\n    //     });\n    // };\n});\n\"use strict\";\n'use strict';\n\nangular.module('vimeoApp').controller('uploadVideoCtrl', function ($scope, mainService, $state) {\n\n  $scope.uploadVideo = function () {\n    $state.go('userVideos');\n    mainService.uploadVid($scope.video).then(function (res) {\n      console.log(res);\n    });\n  };\n});\n'use strict';\n\nangular.module('vimeoApp').filter('firstLetter', function () {\n    return function (privacy) {\n\n        var split = privacy.split(\"\");\n        var firstCap = split[0].toUpperCase();\n        var restofWord = split.splice(0, 1);\n        var scope = firstCap + split.join(\"\");\n\n        return scope;\n    };\n}).filter('convertedTime', function () {\n    return function (time) {\n        var numb = parseInt(time);\n        var minutes = Math.floor(numb / 60);\n        var seconds = numb % 60;\n\n        if (minutes === 0) {\n            if (seconds.toString().length === 1) {\n                return minutes + \"0\" + \":\" + \"0\" + seconds;\n            }\n            return minutes + \"0\" + \":\" + seconds;\n        } else if (seconds.toString().length === 1) {\n            return minutes + \":\" + \"0\" + seconds;\n        }\n        return minutes + \":\" + seconds;\n    };\n}).controller('userVideosCtrl', function ($scope, mainService, $state) {\n    $scope.userVideos = function () {\n        mainService.userVideos().then(function (res) {\n            $scope.videos = res.data.data;\n        });\n    };\n    $scope.userVideos();\n\n    $scope.play = function (videoLink, uri) {\n        mainService.clickedVideo(videoLink);\n        var id = uri.replace(/\\D/g, '');\n        mainService.getId(id);\n        $state.go('playvideo');\n    };\n    $scope.displayWatchLaterList = function () {\n        var id = mainService.arr[0];\n        mainService.getVideoById(id).then(function (res) {\n            mainService.getWatchLaterList(res.data, id).then(function (resp) {\n                $scope.list = resp.data;\n            });\n        });\n    };\n    $scope.displayWatchLaterList();\n});\n'use strict';\n\nangular.module('vimeoApp').directive('commentsDir', function () {\n    return {\n        restrict: \"AE\",\n        templateUrl: \"./views/commentsDir.html\",\n        controller: 'commentsCtrl'\n    };\n});\n'use strict';\n\nangular.module('vimeoApp').directive('fileUploader', function ($parse) {\n    return {\n        restrict: 'A',\n        link: function link(scope, element, attrs) {\n            var model = $parse(attrs.fileUploader),\n                modelSetter = model.assign;\n            element.bind('change', function () {\n                scope.$apply(function () {\n                    modelSetter(scope, element[0].files[0]);\n                });\n            });\n        }\n    };\n});\n'use strict';\n\nangular.module('vimeoApp').directive('footerDir', function () {\n    return {\n        restrict: \"AE\",\n        templateUrl: \"./views/footerDir.html\"\n    };\n});\n'use strict';\n\nangular.module('vimeoApp').directive('navBar', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/navBar.html',\n    link: function link(scope) {},\n    controller: 'navBarCtrl'\n  };\n});\n'use strict';\n\nangular.module('vimeoApp').service('mainService', function ($http) {\n    var serverUrl = 'http://localhost:3012',\n        vm = this;\n    vm.videoData = '';\n    vm.video = '';\n    vm.arr = [];\n    vm.arr2 = [];\n    vm.arr3 = [];\n\n    vm.searchedVideo = function (data) {\n        vm.videoData = data;\n    };\n    vm.getId = function (id) {\n        vm.arr.push(id);\n        if (vm.arr.length > 1) {\n            while (vm.arr.length > 1) {\n                vm.arr.shift();\n            };\n        };\n        console.log(vm.arr[0]);\n    };\n    vm.clickedVideo = function (videoLink) {\n        vm.video = videoLink;\n        vm.arr2.push(videoLink);\n    };\n    vm.transferVideo = function (x) {\n        vm.arr3.push(x);\n        if (vm.arr3.length > 1) {\n            while (vm.arr3.length > 1) {\n                vm.arr3.shift();\n            };\n        };\n    };\n    vm.getVideosByChannel = function (channel) {\n        return $http({\n            method: 'GET',\n            url: serverUrl + ('/api/videos/channels/' + channel)\n        });\n    };\n    vm.searchVideos = function (page, query) {\n        vm.query = query;\n        return $http({\n            method: 'GET',\n            url: serverUrl + ('/api/videos/' + page + '?search=' + query)\n        });\n    };\n    vm.getVideoById = function (id) {\n        return $http({\n            method: 'GET',\n            url: serverUrl + ('/api/videos?id=' + id)\n        });\n    };\n    vm.getComments = function (id) {\n        return $http({\n            method: 'GET',\n            url: serverUrl + ('/api/videos/' + id + '/comments')\n        });\n    };\n    vm.postComment = function (id, text) {\n        return $http({\n            method: 'POST',\n            data: { text: text },\n            url: serverUrl + ('/api/videos/' + id + '/comments')\n        });\n    };\n    vm.login = function () {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/login'\n        });\n    };\n    vm.logout = function () {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/logout'\n        });\n    };\n    vm.getUser = function () {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/currentuser'\n        });\n    };\n\n    vm.uploadVid = function (video) {\n        return $http({\n            method: 'POST',\n            data: { video: video },\n            url: serverUrl + '/api/uploadvideo'\n        });\n    };\n    vm.userVideos = function () {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/usersvideos'\n        });\n    };\n    vm.getAccessToken = function () {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/accesstoken'\n        });\n    };\n    vm.addToWatchLater = function (video, id) {\n        return $http({\n            method: 'POST',\n            data: { video: video },\n            url: serverUrl + ('/api/videos/' + id + '/watchlater')\n        });\n    };\n    vm.getWatchLaterList = function () {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/usersvideos'\n        });\n    };\n});","angular.module('vimeoApp', [\"ui.router\"])\n    .config(function ($stateProvider, $urlRouterProvider) {\n\n        $urlRouterProvider.otherwise('/');\n\n        $stateProvider\n            .state('home', {\n                url: '/',\n                templateUrl: './views/home.html',\n                controller: 'mainCtrl'\n            })\n            .state('userVideos', {\n                url: '/userVideos',\n                templateUrl: './views/userVideos.html',\n                controller: 'userVideosCtrl'\n            })\n            .state('search', {\n                url: '/search',\n                templateUrl: './views/search.html',\n                controller: 'searchCtrl'\n            })\n            .state('edit', {\n                url: '/edit',\n                templateUrl: './views/editvideo.html',\n                controller: 'editCtrl'\n            })\n            .state('playvideo', {\n                url: '/playvideo',\n                templateUrl: './views/playVid.html',\n                controller: 'playVideo'\n            })\n            .state('uploadVideo', {\n                url: '/uploadVideo',\n                templateUrl: './views/uploadVideo.html',\n                controller: 'uploadVideoCtrl'\n            })\n            .state('loading', {\n                url: '/searching',\n                templateUrl: './views/loading.html',\n                controller: 'loadingCtrl'\n            })\n            .state('watchLater', {\n                url: '/watchlater',\n                templateUrl: './views/watchLater.html',\n                controller: 'userVideos'\n            });\n    });\n","angular.module('vimeoApp').controller('accountCtrl', function ($scope) {\n\n});\n","angular.module('vimeoApp').controller('commentsCtrl', function ($scope, mainService) {\n\n  $scope.getAllComments = () => {\n    console.log('hi')\n      let id = mainService.arr[0];\n      mainService.getComments(id).then(res => {\n          $scope.comments = res.data.data;\n          console.log($scope.comments)\n      });\n  }\n  $scope.addComment = () => {\n      let id = mainService.arr[0];\n      console.log(id)\n      mainService.postComment(id, $scope.text).then(res => {\n          $scope.getAllComments();\n          $scope.text='';\n      });\n  };\n\n  $scope.getAllComments();\n\n});\n","angular.module('vimeoApp').controller('loadingCtrl', function ($scope, $timeout) {\n\n    $scope.loadB = true;\n    $scope.loadG = false;\n    $scope.loadR = false;\n\n    $timeout();\n\n    $timeout(() => {\n        $scope.loadG = true;\n    }, 500);\n\n    $timeout();\n\n    $timeout(() => {\n        $scope.loadR = true;\n    }, 1000);\n\n    $timeout();\n\n});\n","angular.module('vimeoApp').controller('mainCtrl', function ($scope, mainService, $state) {\n\n    $scope.login = () => {\n        mainService.login().then(res => {\n            $scope.data = res.data;\n        })\n    }\n    $scope.login();\n\n    $scope.playVideo = (videoLink, uri, video) => {\n        mainService.clickedVideo(videoLink);\n        mainService.transferVideo(video);\n        let id = uri.replace(/\\D/g, '');\n        mainService.getId(id);\n        $state.go('playvideo');\n    }\n\n    mainService.getVideosByChannel('staffpicks').then(res => {\n        $scope.staffpicks = res.data.data;\n    })\n});\n","angular.module('vimeoApp').controller('navBarCtrl', function ($scope, mainService, $state) {\n\n    $scope.profilePicAndUpload = false;\n    $scope.logInNavBar = true;\n    $scope.mainDropDown = true;\n\n    $scope.login = () => {\n        mainService.login().then(res => {\n            $scope.data = res.data;\n        })\n    }\n    $scope.logout = () => {\n        mainService.logout().then(res => {\n            let loggedOut = res.data;\n            $scope.logInNavBar = loggedOut;\n            $scope.profilePicAndUpload = !loggedOut;\n            $scope.mainDropDown = loggedOut;\n            $state.go('home');\n        })\n    }\n    $scope.searchQuery = query => {\n        $state.go('loading');\n        mainService.searchVideos(1, query).then(response => {\n            mainService.searchedVideo(response.data.data);\n            $state.go('search');\n            $scope.query = '';\n        })\n    }\n    $scope.getUser = () => {\n        $state.go('uploadVideo');\n        mainService.getUser().then(res => {\n        })\n    }\n    $scope.checkUser = () => {\n        mainService.getUser().then(res => {\n            if (res.data.name) {\n                $scope.logInNavBar = false;\n                $scope.profilePicture = res.data.pictures[3].link;\n                $scope.userName = res.data.name;\n                $scope.profilePicAndUpload = true;\n            }\n        })\n    }\n    $scope.checkUser();\n});\n","angular.module('vimeoApp').controller('playVideo', function ($scope, mainService, $state) {\n    let stripDuplicates = a => [...new Set(a)];\n    $scope.showButton = true;\n    $scope.video = mainService.video;\n    mainService.getVideosByChannel('staffpicks').then(res => {\n        $scope.arr2 = res.data.data;\n    });\n    $scope.getChannelVideos = () => {\n        mainService.getVideosByChannel('music').then(res => {\n            $scope.arr = res.data.data;\n            $scope.arr.unshift(mainService.arr3[0]);\n            $scope.arr = stripDuplicates($scope.arr);\n            $scope.playVideo = (videoLink, uri, video) => {\n                mainService.clickedVideo(videoLink);\n                let id = uri.replace(/\\D/g, '');\n                mainService.getId(id);\n                $scope.video = mainService.arr2[mainService.arr2.length - 1];\n                document.querySelector(\".video-window\").innerHTML = $scope.video;\n                $scope.getVideo();\n                $scope.getAllComments();\n                $scope.arr.unshift(video);\n                $scope.arr = stripDuplicates($scope.arr);\n            };\n            $scope.showMore = () => {\n                $scope.showButton = false;\n                for (let i = 0; i < $scope.arr2.length; i++) {\n                    $scope.arr.push($scope.arr2[i]);\n                };\n            };\n        });\n    };\n    $scope.getChannelVideos();\n    $scope.getVideo = () => {\n        let id = mainService.arr[0];\n        mainService.getVideoById(id).then(res => {\n            $scope.media = res.data;\n            console.log('$scope.media' , $scope.media)\n            let beforeDate = res.data.created_time,\n                date = beforeDate => {\n                    let newD = beforeDate.slice(0, 10),\n                        splitDate = newD.split(''),\n                        noDash = splitDate.filter(numb => {\n                            return numb !== '-';\n                        });\n                    let forMoment = noDash.join(\"\");\n                    $scope.momentTime = moment(forMoment, \"YYYYMMDD\").fromNow();\n                };\n            date(beforeDate);\n            $scope.dateTest = moment(\"20170601\", \"YYYYMMDD\").fromNow();\n        });\n    };\n    $scope.getVideo();\n    $scope.getAllComments = () => {\n        let id = mainService.arr[0];\n        mainService.getComments(id).then(res => {\n            $scope.comments = res.data.data;\n\n        });\n    }\n    $scope.addComment = () => {\n        let id = mainService.arr[0];\n        mainService.postComment(id, $scope.text).then(res => {\n            $scope.getAllComments();\n        });\n\n    };\n\n    $scope.getAllComments();\n\n    document.querySelector(\".video-window\").innerHTML = $scope.video;\n});\n","angular.module('vimeoApp').controller('searchCtrl', function ($scope, mainService, $state) {\n\n    let getVideos = () => {\n        $scope.videos = mainService.videoData;\n    };\n    getVideos();\n\n    $scope.getVideoID = id => {\n        mainService.getId(id);\n    };\n    $scope.playVideo = (videoLink, uri, i) => {\n        mainService.clickedVideo(videoLink);\n        let id = uri.replace(/\\D/g, '');\n        mainService.getId(id);\n        mainService.transferVideo($scope.videos[i]);\n        $state.go('playvideo');\n\n    };\n    $scope.page = num => {\n        mainService.searchVideos(num, mainService.query).then(res => {\n            $scope.videos = res.data.data;\n            console.log($scope.videos);\n        });\n    };\n    // $scope.addToWatchLaterList = () => {\n    //     mainService.getVideoById\n    //     mainService.addToWatchLater(video, id).then(res => {\n    //         console.log(res);\n    //     });\n    // };\n});\n","","angular.module('vimeoApp').controller('uploadVideoCtrl', function ($scope, mainService, $state) {\n\n    $scope.uploadVideo = () => {\n      $state.go('userVideos')\n        mainService.uploadVid($scope.video).then(res => {\n          console.log(res)\n        })\n    }\n\n});\n","angular.module('vimeoApp')\n\n.filter('firstLetter', function () {\n    return function(privacy){\n\n      var split=privacy.split(\"\");\n      var firstCap=split[0].toUpperCase();\n      var restofWord=split.splice(0,1);\n      var scope=firstCap+split.join(\"\");\n\n      return scope;\n    }\n  })\n\n  .filter('convertedTime', function() {\n    return function(time){\n            let numb=parseInt(time);\n            let minutes = Math.floor(numb / 60);\n            let seconds = numb % 60;\n\n               if(minutes===0){\n                 if(seconds.toString().length===1){\n                   return minutes+ \"0\" + \":\" + \"0\"+seconds;\n                 }\n                 return minutes + \"0\" + \":\" + seconds;\n               }\n\n              else if(seconds.toString().length===1){\n                return minutes+\":\"+\"0\"+seconds;\n               }\n               return minutes+\":\"+seconds;\n       }\n    })\n\n.controller('userVideosCtrl', function ($scope, mainService, $state) {\n    $scope.userVideos = () => {\n        mainService.userVideos().then(res => {\n            $scope.videos = res.data.data;\n        });\n    };\n    $scope.userVideos();\n\n    $scope.play = (videoLink, uri) => {\n        mainService.clickedVideo(videoLink);\n        let id = uri.replace(/\\D/g, '');\n        mainService.getId(id);\n        $state.go('playvideo');\n    };\n    $scope.displayWatchLaterList = () => {\n        let id = mainService.arr[0];\n        mainService.getVideoById(id).then(res => {\n            mainService.getWatchLaterList(res.data, id).then(resp => {\n                $scope.list = resp.data;\n            });\n        });\n    };\n    $scope.displayWatchLaterList();\n});\n","angular.module('vimeoApp').directive('commentsDir', function () {\n    return {\n        restrict: \"AE\",\n        templateUrl: \"./views/commentsDir.html\",\n        controller: 'commentsCtrl'\n    }\n});\n","angular.module('vimeoApp').directive('fileUploader', function ($parse) {\n    return {\n        restrict: 'A',\n        link: function (scope, element, attrs) {\n            let model = $parse(attrs.fileUploader),\n                modelSetter = model.assign;\n            element.bind('change', function () {\n                scope.$apply(function () {\n                    modelSetter(scope, element[0].files[0]);\n                });\n            });\n        }\n    };\n});\n","angular.module('vimeoApp').directive('footerDir', function () {\n    return {\n        restrict: \"AE\",\n        templateUrl: \"./views/footerDir.html\"\n    }\n});","angular.module('vimeoApp')\n.directive('navBar', function() {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/navBar.html',\n    link: function(scope){\n    },\n    controller: 'navBarCtrl'\n    }\n\n})\n","angular.module('vimeoApp').service('mainService', function ($http) {\n    let serverUrl = 'http://localhost:3012',\n        vm = this;\n    vm.videoData = '';\n    vm.video = '';\n    vm.arr = [];\n    vm.arr2 = [];\n    vm.arr3 = [];\n\n    vm.searchedVideo = data => {\n        vm.videoData = data;\n    };\n    vm.getId = id => {\n        vm.arr.push(id);\n        if (vm.arr.length > 1) {\n            while (vm.arr.length > 1) {\n                vm.arr.shift();\n            };\n        };\n        console.log(vm.arr[0]);\n    };\n    vm.clickedVideo = videoLink => {\n        vm.video = videoLink;\n        vm.arr2.push(videoLink);\n    };\n    vm.transferVideo = x => {\n        vm.arr3.push(x);\n        if (vm.arr3.length > 1) {\n            while (vm.arr3.length > 1) {\n                vm.arr3.shift();\n            };\n        };\n    }\n    vm.getVideosByChannel = channel => {\n        return $http({\n            method: 'GET',\n            url: serverUrl + `/api/videos/channels/${channel}`\n        });\n    };\n    vm.searchVideos = (page, query) => {\n        vm.query = query;\n        return $http({\n            method: 'GET',\n            url: serverUrl + `/api/videos/${page}?search=${query}`\n        });\n    };\n    vm.getVideoById = id => {\n        return $http({\n            method: 'GET',\n            url: serverUrl + `/api/videos?id=${id}`\n        });\n    };\n    vm.getComments = id => {\n        return $http({\n            method: 'GET',\n            url: serverUrl + `/api/videos/${id}/comments`\n        });\n    };\n    vm.postComment = (id, text) => {\n        return $http({\n            method: 'POST',\n            data: {text},\n            url: serverUrl + `/api/videos/${id}/comments`\n        });\n    };\n    vm.login = () => {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/login'\n        });\n    };\n    vm.logout = () => {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/logout'\n        });\n    };\n    vm.getUser = () => {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/currentuser'\n        });\n    };\n\n    vm.uploadVid = (video) => {\n        return $http({\n            method: 'POST',\n            data: {video},\n            url: serverUrl + '/api/uploadvideo'\n        });\n    };\n    vm.userVideos = () => {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/usersvideos'\n        });\n    };\n    vm.getAccessToken = () => {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/accesstoken'\n        });\n    };\n    vm.addToWatchLater = (video, id) => {\n        return $http({\n            method: 'POST',\n            data: {video},\n            url: serverUrl + `/api/videos/${id}/watchlater`\n        });\n    };\n    vm.getWatchLaterList = () => {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/usersvideos'\n        });\n    };\n});\n"]}