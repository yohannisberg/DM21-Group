{"version":3,"sources":["bundle.js","app.js","services/mainService.js","directives/commentsDir.js","directives/fileUploader.js","directives/footerDir.js","directives/navBar.js","controllers/accountCtrl.js","controllers/commentsCtrl.js","controllers/loadingCtrl.js","controllers/mainCtrl.js","controllers/navBarCtrl.js","controllers/playVideo.js","controllers/searchCtrl.js","controllers/settingsCtrl.js","controllers/uploadVideoCtrl.js","controllers/userVideos.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","otherwise","state","url","templateUrl","controller","service","$http","serverUrl","vm","videoData","video","arr","arr2","arr3","searchedVideo","data","getId","push","id","length","shift","console","log","clickedVideo","videoLink","transferVideo","x","getVideosByChannel","method","channel","searchVideos","page","query","getVideoById","getComments","postComment","text","login","logout","getUser","uploadVid","userVideos","getAccessToken","addToWatchLater","getWatchLaterList","directive","restrict","$parse","link","scope","element","attrs","model","fileUploader","modelSetter","assign","bind","$apply","files","$scope","mainService","getAllComments","then","comments","res","addComment","$timeout","loadB","loadG","loadR","$state","playVideo","uri","replace","go","staffpicks","profilePicAndUpload","logInNavBar","mainDropDown","loggedOut","searchQuery","response","checkUser","name","profilePicture","pictures","userName","stripDuplicates","Set","a","showButton","getChannelVideos","unshift","document","querySelector","innerHTML","getVideo","showMore","i","media","beforeDate","created_time","date","newD","slice","splitDate","split","noDash","filter","numb","forMoment","join","momentTime","moment","fromNow","dateTest","getVideos","videos","getVideoID","num","uploadVideo","privacy","firstCap","toUpperCase","restofWord","splice","time","parseInt","minutes","Math","floor","seconds","toString","play","displayWatchLaterList","list","resp"],"mappings":"AAAA;;ACAAA,QAAQC,OAAO,YAAY,CAAC,cACvBC,gDAAO,UAAUC,gBAAgBC,oBAAoB;;IAElDA,mBAAmBC,UAAU;;IAE7BF,eACKG,MAAM,QAAQ;QACXC,KAAK;QACLC,aAAa;QACbC,YAAY;OAEfH,MAAM,cAAc;QACjBC,KAAK;QACLC,aAAa;QACbC,YAAY;OAEfH,MAAM,UAAU;QACbC,KAAK;QACLC,aAAa;QACbC,YAAY;OAEfH,MAAM,QAAQ;QACXC,KAAK;QACLC,aAAa;QACbC,YAAY;OAEfH,MAAM,aAAa;QAChBC,KAAK;QACLC,aAAa;QACbC,YAAY;OAEfH,MAAM,eAAe;QAClBC,KAAK;QACLC,aAAa;QACbC,YAAY;OAEfH,MAAM,WAAW;QACdC,KAAK;QACLC,aAAa;QACbC,YAAY;OAEfH,MAAM,cAAc;QACjBC,KAAK;QACLC,aAAa;QACbC,YAAY;;;ADJ5B;;AExCAT,QAAQC,OAAO,YAAYS,QAAQ,yBAAe,UAAUC,OAAO;;IAE/D,IAAIC,YAAY;QACZC,KAAK;IACTA,GAAGC,YAAY;IACfD,GAAGE,QAAQ;IACXF,GAAGG,MAAM;IACTH,GAAGI,OAAO;IACVJ,GAAGK,OAAO;;IAEVL,GAAGM,gBAAgB,UAAA,MAAQ;QACvBN,GAAGC,YAAYM;;IAEnBP,GAAGQ,QAAQ,UAAA,IAAM;QACbR,GAAGG,IAAIM,KAAKC;QACZ,IAAIV,GAAGG,IAAIQ,SAAS,GAAG;YACnB,OAAOX,GAAGG,IAAIQ,SAAS,GAAG;gBACtBX,GAAGG,IAAIS;aACV;SACJ;QACDC,QAAQC,IAAId,GAAGG,IAAI;;IAEvBH,GAAGe,eAAe,UAAA,WAAa;QAC3Bf,GAAGE,QAAQc;QACXhB,GAAGI,KAAKK,KAAKO;;IAEjBhB,GAAGiB,gBAAgB,UAAA,GAAK;QACpBjB,GAAGK,KAAKI,KAAKS;QACb,IAAIlB,GAAGK,KAAKM,SAAS,GAAG;YACpB,OAAOX,GAAGK,KAAKM,SAAS,GAAG;gBACvBX,GAAGK,KAAKO;aACX;SACJ;;IAELZ,GAAGmB,qBAAqB,UAAA,SAAW;QAC/B,OAAOrB,MAAM;YACTsB,QAAQ;YACR1B,KAAKK,aAAAA,0BAAoCsB;;;IAGjDrB,GAAGsB,eAAe,UAACC,MAAMC,OAAU;QAC/BxB,GAAGwB,QAAQA;QACX,OAAO1B,MAAM;YACTsB,QAAQ;YACR1B,KAAKK,aAAAA,iBAA2BwB,OAA3B,aAA0CC;;;IAGvDxB,GAAGyB,eAAe,UAAA,IAAM;QACpB,OAAO3B,MAAM;YACTsB,QAAQ;YACR1B,KAAKK,aAAAA,oBAA8BW;;;IAG3CV,GAAG0B,cAAc,UAAA,IAAM;QACnB,OAAO5B,MAAM;YACTsB,QAAQ;YACR1B,KAAKK,aAAAA,iBAA2BW,KAA3B;;;IAGbV,GAAG2B,cAAc,UAACjB,IAAIkB,MAAS;QAC3B,OAAO9B,MAAM;YACTsB,QAAQ;YACRb,MAAM,EAACqB,MAAAA;YACPlC,KAAKK,aAAAA,iBAA2BW,KAA3B;;;IAGbV,GAAG6B,QAAQ,YAAM;QACb,OAAO/B,MAAM;YACTsB,QAAQ;YACR1B,KAAKK,YAAY;;;IAGzBC,GAAG8B,SAAS,YAAM;QACd,OAAOhC,MAAM;YACTsB,QAAQ;YACR1B,KAAKK,YAAY;;;IAGzBC,GAAG+B,UAAU,YAAM;QACf,OAAOjC,MAAM;YACTsB,QAAQ;YACR1B,KAAKK,YAAY;;;;IAIzBC,GAAGgC,YAAY,UAAC9B,OAAU;QACtB,OAAOJ,MAAM;YACTsB,QAAQ;YACRb,MAAM,EAACL,OAAAA;YACPR,KAAKK,YAAY;;;IAGzBC,GAAGiC,aAAa,YAAM;QAClB,OAAOnC,MAAM;YACTsB,QAAQ;YACR1B,KAAKK,YAAY;;;IAGzBC,GAAGkC,iBAAiB,YAAM;QACtB,OAAOpC,MAAM;YACTsB,QAAQ;YACR1B,KAAKK,YAAY;;;IAGzBC,GAAGmC,kBAAkB,UAACjC,OAAOQ,IAAO;QAChC,OAAOZ,MAAM;YACTsB,QAAQ;YACRb,MAAM,EAACL,OAAAA;YACPR,KAAKK,aAAAA,iBAA2BW,KAA3B;;;IAGbV,GAAGoC,oBAAoB,YAAM;QACzB,OAAOtC,MAAM;YACTsB,QAAQ;YACR1B,KAAKK,YAAY;;;;AF8C7B;;AGhKAZ,QAAQC,OAAO,YAAYiD,UAAU,eAAe,YAAY;IAC5D,OAAO;QACHC,UAAU;QACV3C,aAAa;QACbC,YAAY;;;AHqKpB;;AIzKAT,QAAQC,OAAO,YAAYiD,UAAU,2BAAgB,UAAUE,QAAQ;IACnE,OAAO;QACHD,UAAU;QACVE,MAAM,SAAA,KAAUC,OAAOC,SAASC,OAAO;YACnC,IAAIC,QAAQL,OAAOI,MAAME;gBACrBC,cAAcF,MAAMG;YACxBL,QAAQM,KAAK,UAAU,YAAY;gBAC/BP,MAAMQ,OAAO,YAAY;oBACrBH,YAAYL,OAAOC,QAAQ,GAAGQ,MAAM;;;;;;AJiLxD;;AKzLA/D,QAAQC,OAAO,YAAYiD,UAAU,aAAa,YAAY;IAC1D,OAAO;QACHC,UAAU;QACV3C,aAAa;;;AL8LrB;;AMjMAR,QAAQC,OAAO,YACdiD,UAAU,UAAU,YAAW;;EAE9B,OAAO;IACLC,UAAU;IACV3C,aAAa;IACb6C,MAAM,SAAA,KAASC,OAAM;IAErB7C,YAAY;;;ANoMhB;;AO5MAT,QAAQC,OAAO,YAAYQ,WAAW,0BAAe,UAAUuD,QAAQ;AP+MvE;;AQ/MAhE,QAAQC,OAAO,YAAYQ,WAAW,0CAAgB,UAAUuD,QAAQC,aAAa;;IAEnFD,OAAOE,iBAAiB,YAAM;QAC5BxC,QAAQC,IAAI;QACV,IAAIJ,KAAK0C,YAAYjD,IAAI;QACzBiD,YAAY1B,YAAYhB,IAAI4C,KAAK,UAAA,KAAO;YACpCH,OAAOI,WAAWC,IAAIjD,KAAKA;YAC3BM,QAAQC,IAAIqC,OAAOI;;;IAG3BJ,OAAOM,aAAa,YAAM;QACtB,IAAI/C,KAAK0C,YAAYjD,IAAI;QACzBU,QAAQC,IAAIJ;QACZ0C,YAAYzB,YAAYjB,IAAIyC,OAAOvB,MAAM0B,KAAK,UAAA,KAAO;YACjDH,OAAOE;YACPF,OAAOvB,OAAK;;;;IAIpBuB,OAAOE;;ARmNT;;AStOAlE,QAAQC,OAAO,YAAYQ,WAAW,sCAAe,UAAUuD,QAAQO,UAAU;;IAE7EP,OAAOQ,QAAQ;IACfR,OAAOS,QAAQ;IACfT,OAAOU,QAAQ;;IAEfH;;IAEAA,SAAS,YAAM;QACXP,OAAOS,QAAQ;OAChB;;IAEHF;;IAEAA,SAAS,YAAM;QACXP,OAAOU,QAAQ;OAChB;;IAEHH;;AT0OJ;;AU5PAvE,QAAQC,OAAO,YAAYQ,WAAW,gDAAY,UAAUuD,QAAQC,aAAaU,QAAQ;;IAErFX,OAAOtB,QAAQ,YAAM;QACjBuB,YAAYvB,QAAQyB,KAAK,UAAA,KAAO;YAC5BH,OAAO5C,OAAOiD,IAAIjD;;;IAG1B4C,OAAOtB;;IAEPsB,OAAOY,YAAY,UAAC/C,WAAWgD,KAAK9D,OAAU;QAC1CkD,YAAYrC,aAAaC;QACzBoC,YAAYnC,cAAcf;QAC1B,IAAIQ,KAAKsD,IAAIC,QAAQ,OAAO;QAC5Bb,YAAY5C,MAAME;QAClBoD,OAAOI,GAAG;;;IAGdd,YAAYjC,mBAAmB,cAAcmC,KAAK,UAAA,KAAO;QACrDH,OAAOgB,aAAaX,IAAIjD,KAAKA;;;AViQrC;;AWnRApB,QAAQC,OAAO,YAAYQ,WAAW,kDAAc,UAAUuD,QAAQC,aAAaU,QAAQ;;IAEvFX,OAAOiB,sBAAsB;IAC7BjB,OAAOkB,cAAc;IACrBlB,OAAOmB,eAAe;;IAEtBnB,OAAOtB,QAAQ,YAAM;QACjBuB,YAAYvB,QAAQyB,KAAK,UAAA,KAAO;YAC5BH,OAAO5C,OAAOiD,IAAIjD;;;IAG1B4C,OAAOrB,SAAS,YAAM;QAClBsB,YAAYtB,SAASwB,KAAK,UAAA,KAAO;YAC7B,IAAIiB,YAAYf,IAAIjD;YACpB4C,OAAOkB,cAAcE;YACrBpB,OAAOiB,sBAAsB,CAACG;YAC9BpB,OAAOmB,eAAeC;YACtBT,OAAOI,GAAG;;;IAGlBf,OAAOqB,cAAc,UAAA,OAAS;QAC1BV,OAAOI,GAAG;QACVd,YAAY9B,aAAa,GAAGE,OAAO8B,KAAK,UAAA,UAAY;YAChDF,YAAY9C,cAAcmE,SAASlE,KAAKA;YACxCuD,OAAOI,GAAG;YACVf,OAAO3B,QAAQ;;;IAGvB2B,OAAOpB,UAAU,YAAM;QACnB+B,OAAOI,GAAG;QACVd,YAAYrB,UAAUuB,KAAK,UAAA,KAAO;;IAGtCH,OAAOuB,YAAY,YAAM;QACrBtB,YAAYrB,UAAUuB,KAAK,UAAA,KAAO;YAC9B,IAAIE,IAAIjD,KAAKoE,MAAM;gBACfxB,OAAOkB,cAAc;gBACrBlB,OAAOyB,iBAAiBpB,IAAIjD,KAAKsE,SAAS,GAAGrC;gBAC7CW,OAAO2B,WAAWtB,IAAIjD,KAAKoE;gBAC3BxB,OAAOiB,sBAAsB;;;;IAIzCjB,OAAOuB;;AXsRX;;AAEA,SAAS,mBAAmB,KAAK,EAAE,IAAI,MAAM,QAAQ,MAAM,EAAE,KAAK,IAAI,IAAI,GAAG,OAAO,MAAM,IAAI,SAAS,IAAI,IAAI,QAAQ,KAAK,EAAE,KAAK,KAAK,IAAI,MAAM,OAAO,aAAa,EAAE,OAAO,MAAM,KAAK;;AYnU1LvF,QAAQC,OAAO,YAAYQ,WAAW,iDAAa,UAAUuD,QAAQC,aAAaU,QAAQ;IACtF,IAAIiB,kBAAkB,SAAlBA,gBAAkB,GAAA;QAAA,OAAA,GAAA,OAAA,mBAAS,IAAIC,IAAIC;;IACvC9B,OAAO+B,aAAa;IACpB/B,OAAOjD,QAAQkD,YAAYlD;IAC3BkD,YAAYjC,mBAAmB,cAAcmC,KAAK,UAAA,KAAO;QACrDH,OAAO/C,OAAOoD,IAAIjD,KAAKA;;IAE3B4C,OAAOgC,mBAAmB,YAAM;QAC5B/B,YAAYjC,mBAAmB,SAASmC,KAAK,UAAA,KAAO;YAChDH,OAAOhD,MAAMqD,IAAIjD,KAAKA;YACtB4C,OAAOhD,IAAIiF,QAAQhC,YAAY/C,KAAK;YACpC8C,OAAOhD,MAAM4E,gBAAgB5B,OAAOhD;YACpCgD,OAAOY,YAAY,UAAC/C,WAAWgD,KAAK9D,OAAU;gBAC1CkD,YAAYrC,aAAaC;gBACzB,IAAIN,KAAKsD,IAAIC,QAAQ,OAAO;gBAC5Bb,YAAY5C,MAAME;gBAClByC,OAAOjD,QAAQkD,YAAYhD,KAAKgD,YAAYhD,KAAKO,SAAS;gBAC1D0E,SAASC,cAAc,iBAAiBC,YAAYpC,OAAOjD;gBAC3DiD,OAAOqC;gBACPrC,OAAOE;gBACPF,OAAOhD,IAAIiF,QAAQlF;gBACnBiD,OAAOhD,MAAM4E,gBAAgB5B,OAAOhD;;YAExCgD,OAAOsC,WAAW,YAAM;gBACpBtC,OAAO+B,aAAa;gBACpB,KAAK,IAAIQ,IAAI,GAAGA,IAAIvC,OAAO/C,KAAKO,QAAQ+E,KAAK;oBACzCvC,OAAOhD,IAAIM,KAAK0C,OAAO/C,KAAKsF;iBAC/B;;;;IAIbvC,OAAOgC;IACPhC,OAAOqC,WAAW,YAAM;QACpB,IAAI9E,KAAK0C,YAAYjD,IAAI;QACzBiD,YAAY3B,aAAaf,IAAI4C,KAAK,UAAA,KAAO;YACrCH,OAAOwC,QAAQnC,IAAIjD;YACnBM,QAAQC,IAAI,gBAAiBqC,OAAOwC;YACpC,IAAIC,aAAapC,IAAIjD,KAAKsF;gBACtBC,OAAO,SAAPA,KAAO,YAAc;gBACjB,IAAIC,OAAOH,WAAWI,MAAM,GAAG;oBAC3BC,YAAYF,KAAKG,MAAM;oBACvBC,SAASF,UAAUG,OAAO,UAAA,MAAQ;oBAC9B,OAAOC,SAAS;;gBAExB,IAAIC,YAAYH,OAAOI,KAAK;gBAC5BpD,OAAOqD,aAAaC,OAAOH,WAAW,YAAYI;;YAE1DZ,KAAKF;YACLzC,OAAOwD,WAAWF,OAAO,YAAY,YAAYC;;;IAGzDvD,OAAOqC;IACPrC,OAAOE,iBAAiB,YAAM;QAC1B,IAAI3C,KAAK0C,YAAYjD,IAAI;QACzBiD,YAAY1B,YAAYhB,IAAI4C,KAAK,UAAA,KAAO;YACpCH,OAAOI,WAAWC,IAAIjD,KAAKA;;;IAInC4C,OAAOM,aAAa,YAAM;QACtB,IAAI/C,KAAK0C,YAAYjD,IAAI;QACzBiD,YAAYzB,YAAYjB,IAAIyC,OAAOvB,MAAM0B,KAAK,UAAA,KAAO;YACjDH,OAAOE;;;;IAKfF,OAAOE;;IAEPgC,SAASC,cAAc,iBAAiBC,YAAYpC,OAAOjD;;AZuU/D;;Aa5YAf,QAAQC,OAAO,YAAYQ,WAAW,kDAAc,UAAUuD,QAAQC,aAAaU,QAAQ;;IAEvF,IAAI8C,YAAY,SAAZA,YAAkB;QAClBzD,OAAO0D,SAASzD,YAAYnD;;IAEhC2G;;IAEAzD,OAAO2D,aAAa,UAAA,IAAM;QACtB1D,YAAY5C,MAAME;;IAEtByC,OAAOY,YAAY,UAAC/C,WAAWgD,KAAK0B,GAAM;QACtCtC,YAAYrC,aAAaC;QACzB,IAAIN,KAAKsD,IAAIC,QAAQ,OAAO;QAC5Bb,YAAY5C,MAAME;QAClB0C,YAAYnC,cAAckC,OAAO0D,OAAOnB;QACxC5B,OAAOI,GAAG;;IAGdf,OAAO5B,OAAO,UAAA,KAAO;QACjB6B,YAAY9B,aAAayF,KAAK3D,YAAY5B,OAAO8B,KAAK,UAAA,KAAO;YACzDH,OAAO0D,SAASrD,IAAIjD,KAAKA;YACzBM,QAAQC,IAAIqC,OAAO0D;;;;;;;;;;ACrB/B;Ad6aA;;Ae7aA1H,QAAQC,OAAO,YAAYQ,WAAW,uDAAmB,UAAUuD,QAAQC,aAAaU,QAAQ;;EAE5FX,OAAO6D,cAAc,YAAM;IACzBlD,OAAOI,GAAG;IACRd,YAAYpB,UAAUmB,OAAOjD,OAAOoD,KAAK,UAAA,KAAO;MAC9CzC,QAAQC,IAAI0C;;;;AfmbtB;;AgBxbArE,QAAQC,OAAO,YAEdgH,OAAO,eAAe,YAAY;IAC/B,OAAO,UAASa,SAAQ;;QAEtB,IAAIf,QAAMe,QAAQf,MAAM;QACxB,IAAIgB,WAAShB,MAAM,GAAGiB;QACtB,IAAIC,aAAWlB,MAAMmB,OAAO,GAAE;QAC9B,IAAI5E,QAAMyE,WAAShB,MAAMK,KAAK;;QAE9B,OAAO9D;;GAIV2D,OAAO,iBAAiB,YAAW;IAClC,OAAO,UAASkB,MAAK;QACb,IAAIjB,OAAKkB,SAASD;QAClB,IAAIE,UAAUC,KAAKC,MAAMrB,OAAO;QAChC,IAAIsB,UAAUtB,OAAO;;QAElB,IAAGmB,YAAU,GAAE;YACb,IAAGG,QAAQC,WAAWjH,WAAS,GAAE;gBAC/B,OAAO6G,UAAS,MAAM,MAAM,MAAIG;;YAElC,OAAOH,UAAU,MAAM,MAAMG;eAG3B,IAAGA,QAAQC,WAAWjH,WAAS,GAAE;YACpC,OAAO6G,UAAQ,MAAI,MAAIG;;QAExB,OAAOH,UAAQ,MAAIG;;GAIjC/H,WAAW,sDAAkB,UAAUuD,QAAQC,aAAaU,QAAQ;IACjEX,OAAOlB,aAAa,YAAM;QACtBmB,YAAYnB,aAAaqB,KAAK,UAAA,KAAO;YACjCH,OAAO0D,SAASrD,IAAIjD,KAAKA;;;IAGjC4C,OAAOlB;;IAEPkB,OAAO0E,OAAO,UAAC7G,WAAWgD,KAAQ;QAC9BZ,YAAYrC,aAAaC;QACzB,IAAIN,KAAKsD,IAAIC,QAAQ,OAAO;QAC5Bb,YAAY5C,MAAME;QAClBoD,OAAOI,GAAG;;IAEdf,OAAO2E,wBAAwB,YAAM;QACjC,IAAIpH,KAAK0C,YAAYjD,IAAI;QACzBiD,YAAY3B,aAAaf,IAAI4C,KAAK,UAAA,KAAO;YACrCF,YAAYhB,kBAAkBoB,IAAIjD,MAAMG,IAAI4C,KAAK,UAAA,MAAQ;gBACrDH,OAAO4E,OAAOC,KAAKzH;;;;IAI/B4C,OAAO2E;IAxDX","file":"bundle.js","sourcesContent":["'use strict';\n\nangular.module('vimeoApp', [\"ui.router\"]).config(function ($stateProvider, $urlRouterProvider) {\n\n    $urlRouterProvider.otherwise('/');\n\n    $stateProvider.state('home', {\n        url: '/',\n        templateUrl: './views/home.html',\n        controller: 'mainCtrl'\n    }).state('userVideos', {\n        url: '/userVideos',\n        templateUrl: './views/userVideos.html',\n        controller: 'userVideosCtrl'\n    }).state('search', {\n        url: '/search',\n        templateUrl: './views/search.html',\n        controller: 'searchCtrl'\n    }).state('edit', {\n        url: '/edit',\n        templateUrl: './views/editvideo.html',\n        controller: 'editCtrl'\n    }).state('playvideo', {\n        url: '/playvideo',\n        templateUrl: './views/playVid.html',\n        controller: 'playVideo'\n    }).state('uploadVideo', {\n        url: '/uploadVideo',\n        templateUrl: './views/uploadVideo.html',\n        controller: 'uploadVideoCtrl'\n    }).state('loading', {\n        url: '/searching',\n        templateUrl: './views/loading.html',\n        controller: 'loadingCtrl'\n    }).state('watchLater', {\n        url: '/watchlater',\n        templateUrl: './views/watchLater.html',\n        controller: 'userVideos'\n    });\n});\n'use strict';\n\nangular.module('vimeoApp').service('mainService', function ($http) {\n    // let serverUrl = 'http://localhost:3014',\n    var serverUrl = 'http://107.170.218.43:3014',\n        vm = this;\n    vm.videoData = '';\n    vm.video = '';\n    vm.arr = [];\n    vm.arr2 = [];\n    vm.arr3 = [];\n\n    vm.searchedVideo = function (data) {\n        vm.videoData = data;\n    };\n    vm.getId = function (id) {\n        vm.arr.push(id);\n        if (vm.arr.length > 1) {\n            while (vm.arr.length > 1) {\n                vm.arr.shift();\n            };\n        };\n        console.log(vm.arr[0]);\n    };\n    vm.clickedVideo = function (videoLink) {\n        vm.video = videoLink;\n        vm.arr2.push(videoLink);\n    };\n    vm.transferVideo = function (x) {\n        vm.arr3.push(x);\n        if (vm.arr3.length > 1) {\n            while (vm.arr3.length > 1) {\n                vm.arr3.shift();\n            };\n        };\n    };\n    vm.getVideosByChannel = function (channel) {\n        return $http({\n            method: 'GET',\n            url: serverUrl + ('/api/videos/channels/' + channel)\n        });\n    };\n    vm.searchVideos = function (page, query) {\n        vm.query = query;\n        return $http({\n            method: 'GET',\n            url: serverUrl + ('/api/videos/' + page + '?search=' + query)\n        });\n    };\n    vm.getVideoById = function (id) {\n        return $http({\n            method: 'GET',\n            url: serverUrl + ('/api/videos?id=' + id)\n        });\n    };\n    vm.getComments = function (id) {\n        return $http({\n            method: 'GET',\n            url: serverUrl + ('/api/videos/' + id + '/comments')\n        });\n    };\n    vm.postComment = function (id, text) {\n        return $http({\n            method: 'POST',\n            data: { text: text },\n            url: serverUrl + ('/api/videos/' + id + '/comments')\n        });\n    };\n    vm.login = function () {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/login'\n        });\n    };\n    vm.logout = function () {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/logout'\n        });\n    };\n    vm.getUser = function () {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/currentuser'\n        });\n    };\n\n    vm.uploadVid = function (video) {\n        return $http({\n            method: 'POST',\n            data: { video: video },\n            url: serverUrl + '/api/uploadvideo'\n        });\n    };\n    vm.userVideos = function () {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/usersvideos'\n        });\n    };\n    vm.getAccessToken = function () {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/accesstoken'\n        });\n    };\n    vm.addToWatchLater = function (video, id) {\n        return $http({\n            method: 'POST',\n            data: { video: video },\n            url: serverUrl + ('/api/videos/' + id + '/watchlater')\n        });\n    };\n    vm.getWatchLaterList = function () {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/usersvideos'\n        });\n    };\n});\n'use strict';\n\nangular.module('vimeoApp').directive('commentsDir', function () {\n    return {\n        restrict: \"AE\",\n        templateUrl: \"./views/commentsDir.html\",\n        controller: 'commentsCtrl'\n    };\n});\n'use strict';\n\nangular.module('vimeoApp').directive('fileUploader', function ($parse) {\n    return {\n        restrict: 'A',\n        link: function link(scope, element, attrs) {\n            var model = $parse(attrs.fileUploader),\n                modelSetter = model.assign;\n            element.bind('change', function () {\n                scope.$apply(function () {\n                    modelSetter(scope, element[0].files[0]);\n                });\n            });\n        }\n    };\n});\n'use strict';\n\nangular.module('vimeoApp').directive('footerDir', function () {\n    return {\n        restrict: \"AE\",\n        templateUrl: \"./views/footerDir.html\"\n    };\n});\n'use strict';\n\nangular.module('vimeoApp').directive('navBar', function () {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/navBar.html',\n    link: function link(scope) {},\n    controller: 'navBarCtrl'\n  };\n});\n'use strict';\n\nangular.module('vimeoApp').controller('accountCtrl', function ($scope) {});\n'use strict';\n\nangular.module('vimeoApp').controller('commentsCtrl', function ($scope, mainService) {\n\n    $scope.getAllComments = function () {\n        console.log('hi');\n        var id = mainService.arr[0];\n        mainService.getComments(id).then(function (res) {\n            $scope.comments = res.data.data;\n            console.log($scope.comments);\n        });\n    };\n    $scope.addComment = function () {\n        var id = mainService.arr[0];\n        console.log(id);\n        mainService.postComment(id, $scope.text).then(function (res) {\n            $scope.getAllComments();\n            $scope.text = '';\n        });\n    };\n\n    $scope.getAllComments();\n});\n'use strict';\n\nangular.module('vimeoApp').controller('loadingCtrl', function ($scope, $timeout) {\n\n    $scope.loadB = true;\n    $scope.loadG = false;\n    $scope.loadR = false;\n\n    $timeout();\n\n    $timeout(function () {\n        $scope.loadG = true;\n    }, 500);\n\n    $timeout();\n\n    $timeout(function () {\n        $scope.loadR = true;\n    }, 1000);\n\n    $timeout();\n});\n'use strict';\n\nangular.module('vimeoApp').controller('mainCtrl', function ($scope, mainService, $state) {\n\n    $scope.login = function () {\n        mainService.login().then(function (res) {\n            $scope.data = res.data;\n        });\n    };\n    $scope.login();\n\n    $scope.playVideo = function (videoLink, uri, video) {\n        mainService.clickedVideo(videoLink);\n        mainService.transferVideo(video);\n        var id = uri.replace(/\\D/g, '');\n        mainService.getId(id);\n        $state.go('playvideo');\n    };\n\n    mainService.getVideosByChannel('staffpicks').then(function (res) {\n        $scope.staffpicks = res.data.data;\n    });\n});\n'use strict';\n\nangular.module('vimeoApp').controller('navBarCtrl', function ($scope, mainService, $state) {\n\n    $scope.profilePicAndUpload = false;\n    $scope.logInNavBar = true;\n    $scope.mainDropDown = true;\n\n    $scope.login = function () {\n        mainService.login().then(function (res) {\n            $scope.data = res.data;\n        });\n    };\n    $scope.logout = function () {\n        mainService.logout().then(function (res) {\n            var loggedOut = res.data;\n            $scope.logInNavBar = loggedOut;\n            $scope.profilePicAndUpload = !loggedOut;\n            $scope.mainDropDown = loggedOut;\n            $state.go('home');\n        });\n    };\n    $scope.searchQuery = function (query) {\n        $state.go('loading');\n        mainService.searchVideos(1, query).then(function (response) {\n            mainService.searchedVideo(response.data.data);\n            $state.go('search');\n            $scope.query = '';\n        });\n    };\n    $scope.getUser = function () {\n        $state.go('uploadVideo');\n        mainService.getUser().then(function (res) {});\n    };\n    $scope.checkUser = function () {\n        mainService.getUser().then(function (res) {\n            if (res.data.name) {\n                $scope.logInNavBar = false;\n                $scope.profilePicture = res.data.pictures[3].link;\n                $scope.userName = res.data.name;\n                $scope.profilePicAndUpload = true;\n            }\n        });\n    };\n    $scope.checkUser();\n});\n'use strict';\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nangular.module('vimeoApp').controller('playVideo', function ($scope, mainService, $state) {\n    var stripDuplicates = function stripDuplicates(a) {\n        return [].concat(_toConsumableArray(new Set(a)));\n    };\n    $scope.showButton = true;\n    $scope.video = mainService.video;\n    mainService.getVideosByChannel('staffpicks').then(function (res) {\n        $scope.arr2 = res.data.data;\n    });\n    $scope.getChannelVideos = function () {\n        mainService.getVideosByChannel('music').then(function (res) {\n            $scope.arr = res.data.data;\n            $scope.arr.unshift(mainService.arr3[0]);\n            $scope.arr = stripDuplicates($scope.arr);\n            $scope.playVideo = function (videoLink, uri, video) {\n                mainService.clickedVideo(videoLink);\n                var id = uri.replace(/\\D/g, '');\n                mainService.getId(id);\n                $scope.video = mainService.arr2[mainService.arr2.length - 1];\n                document.querySelector(\".video-window\").innerHTML = $scope.video;\n                $scope.getVideo();\n                $scope.getAllComments();\n                $scope.arr.unshift(video);\n                $scope.arr = stripDuplicates($scope.arr);\n            };\n            $scope.showMore = function () {\n                $scope.showButton = false;\n                for (var i = 0; i < $scope.arr2.length; i++) {\n                    $scope.arr.push($scope.arr2[i]);\n                };\n            };\n        });\n    };\n    $scope.getChannelVideos();\n    $scope.getVideo = function () {\n        var id = mainService.arr[0];\n        mainService.getVideoById(id).then(function (res) {\n            $scope.media = res.data;\n            console.log('$scope.media', $scope.media);\n            var beforeDate = res.data.created_time,\n                date = function date(beforeDate) {\n                var newD = beforeDate.slice(0, 10),\n                    splitDate = newD.split(''),\n                    noDash = splitDate.filter(function (numb) {\n                    return numb !== '-';\n                });\n                var forMoment = noDash.join(\"\");\n                $scope.momentTime = moment(forMoment, \"YYYYMMDD\").fromNow();\n            };\n            date(beforeDate);\n            $scope.dateTest = moment(\"20170601\", \"YYYYMMDD\").fromNow();\n        });\n    };\n    $scope.getVideo();\n    $scope.getAllComments = function () {\n        var id = mainService.arr[0];\n        mainService.getComments(id).then(function (res) {\n            $scope.comments = res.data.data;\n        });\n    };\n    $scope.addComment = function () {\n        var id = mainService.arr[0];\n        mainService.postComment(id, $scope.text).then(function (res) {\n            $scope.getAllComments();\n        });\n    };\n\n    $scope.getAllComments();\n\n    document.querySelector(\".video-window\").innerHTML = $scope.video;\n});\n'use strict';\n\nangular.module('vimeoApp').controller('searchCtrl', function ($scope, mainService, $state) {\n\n    var getVideos = function getVideos() {\n        $scope.videos = mainService.videoData;\n    };\n    getVideos();\n\n    $scope.getVideoID = function (id) {\n        mainService.getId(id);\n    };\n    $scope.playVideo = function (videoLink, uri, i) {\n        mainService.clickedVideo(videoLink);\n        var id = uri.replace(/\\D/g, '');\n        mainService.getId(id);\n        mainService.transferVideo($scope.videos[i]);\n        $state.go('playvideo');\n    };\n    $scope.page = function (num) {\n        mainService.searchVideos(num, mainService.query).then(function (res) {\n            $scope.videos = res.data.data;\n            console.log($scope.videos);\n        });\n    };\n    // $scope.addToWatchLaterList = () => {\n    //     mainService.getVideoById\n    //     mainService.addToWatchLater(video, id).then(res => {\n    //         console.log(res);\n    //     });\n    // };\n});\n\"use strict\";\n'use strict';\n\nangular.module('vimeoApp').controller('uploadVideoCtrl', function ($scope, mainService, $state) {\n\n  $scope.uploadVideo = function () {\n    $state.go('userVideos');\n    mainService.uploadVid($scope.video).then(function (res) {\n      console.log(res);\n    });\n  };\n});\n'use strict';\n\nangular.module('vimeoApp').filter('firstLetter', function () {\n    return function (privacy) {\n\n        var split = privacy.split(\"\");\n        var firstCap = split[0].toUpperCase();\n        var restofWord = split.splice(0, 1);\n        var scope = firstCap + split.join(\"\");\n\n        return scope;\n    };\n}).filter('convertedTime', function () {\n    return function (time) {\n        var numb = parseInt(time);\n        var minutes = Math.floor(numb / 60);\n        var seconds = numb % 60;\n\n        if (minutes === 0) {\n            if (seconds.toString().length === 1) {\n                return minutes + \"0\" + \":\" + \"0\" + seconds;\n            }\n            return minutes + \"0\" + \":\" + seconds;\n        } else if (seconds.toString().length === 1) {\n            return minutes + \":\" + \"0\" + seconds;\n        }\n        return minutes + \":\" + seconds;\n    };\n}).controller('userVideosCtrl', function ($scope, mainService, $state) {\n    $scope.userVideos = function () {\n        mainService.userVideos().then(function (res) {\n            $scope.videos = res.data.data;\n        });\n    };\n    $scope.userVideos();\n\n    $scope.play = function (videoLink, uri) {\n        mainService.clickedVideo(videoLink);\n        var id = uri.replace(/\\D/g, '');\n        mainService.getId(id);\n        $state.go('playvideo');\n    };\n    $scope.displayWatchLaterList = function () {\n        var id = mainService.arr[0];\n        mainService.getVideoById(id).then(function (res) {\n            mainService.getWatchLaterList(res.data, id).then(function (resp) {\n                $scope.list = resp.data;\n            });\n        });\n    };\n    $scope.displayWatchLaterList();\n});","angular.module('vimeoApp', [\"ui.router\"])\n    .config(function ($stateProvider, $urlRouterProvider) {\n\n        $urlRouterProvider.otherwise('/');\n\n        $stateProvider\n            .state('home', {\n                url: '/',\n                templateUrl: './views/home.html',\n                controller: 'mainCtrl'\n            })\n            .state('userVideos', {\n                url: '/userVideos',\n                templateUrl: './views/userVideos.html',\n                controller: 'userVideosCtrl'\n            })\n            .state('search', {\n                url: '/search',\n                templateUrl: './views/search.html',\n                controller: 'searchCtrl'\n            })\n            .state('edit', {\n                url: '/edit',\n                templateUrl: './views/editvideo.html',\n                controller: 'editCtrl'\n            })\n            .state('playvideo', {\n                url: '/playvideo',\n                templateUrl: './views/playVid.html',\n                controller: 'playVideo'\n            })\n            .state('uploadVideo', {\n                url: '/uploadVideo',\n                templateUrl: './views/uploadVideo.html',\n                controller: 'uploadVideoCtrl'\n            })\n            .state('loading', {\n                url: '/searching',\n                templateUrl: './views/loading.html',\n                controller: 'loadingCtrl'\n            })\n            .state('watchLater', {\n                url: '/watchlater',\n                templateUrl: './views/watchLater.html',\n                controller: 'userVideos'\n            });\n    });\n","angular.module('vimeoApp').service('mainService', function ($http) {\n    // let serverUrl = 'http://localhost:3014',\n    let serverUrl = 'http://107.170.218.43:3014',\n        vm = this;\n    vm.videoData = '';\n    vm.video = '';\n    vm.arr = [];\n    vm.arr2 = [];\n    vm.arr3 = [];\n\n    vm.searchedVideo = data => {\n        vm.videoData = data;\n    };\n    vm.getId = id => {\n        vm.arr.push(id);\n        if (vm.arr.length > 1) {\n            while (vm.arr.length > 1) {\n                vm.arr.shift();\n            };\n        };\n        console.log(vm.arr[0]);\n    };\n    vm.clickedVideo = videoLink => {\n        vm.video = videoLink;\n        vm.arr2.push(videoLink);\n    };\n    vm.transferVideo = x => {\n        vm.arr3.push(x);\n        if (vm.arr3.length > 1) {\n            while (vm.arr3.length > 1) {\n                vm.arr3.shift();\n            };\n        };\n    }\n    vm.getVideosByChannel = channel => {\n        return $http({\n            method: 'GET',\n            url: serverUrl + `/api/videos/channels/${channel}`\n        });\n    };\n    vm.searchVideos = (page, query) => {\n        vm.query = query;\n        return $http({\n            method: 'GET',\n            url: serverUrl + `/api/videos/${page}?search=${query}`\n        });\n    };\n    vm.getVideoById = id => {\n        return $http({\n            method: 'GET',\n            url: serverUrl + `/api/videos?id=${id}`\n        });\n    };\n    vm.getComments = id => {\n        return $http({\n            method: 'GET',\n            url: serverUrl + `/api/videos/${id}/comments`\n        });\n    };\n    vm.postComment = (id, text) => {\n        return $http({\n            method: 'POST',\n            data: {text},\n            url: serverUrl + `/api/videos/${id}/comments`\n        });\n    };\n    vm.login = () => {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/login'\n        });\n    };\n    vm.logout = () => {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/logout'\n        });\n    };\n    vm.getUser = () => {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/currentuser'\n        });\n    };\n\n    vm.uploadVid = (video) => {\n        return $http({\n            method: 'POST',\n            data: {video},\n            url: serverUrl + '/api/uploadvideo'\n        });\n    };\n    vm.userVideos = () => {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/usersvideos'\n        });\n    };\n    vm.getAccessToken = () => {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/accesstoken'\n        });\n    };\n    vm.addToWatchLater = (video, id) => {\n        return $http({\n            method: 'POST',\n            data: {video},\n            url: serverUrl + `/api/videos/${id}/watchlater`\n        });\n    };\n    vm.getWatchLaterList = () => {\n        return $http({\n            method: 'GET',\n            url: serverUrl + '/api/usersvideos'\n        });\n    };\n});\n","angular.module('vimeoApp').directive('commentsDir', function () {\n    return {\n        restrict: \"AE\",\n        templateUrl: \"./views/commentsDir.html\",\n        controller: 'commentsCtrl'\n    }\n});\n","angular.module('vimeoApp').directive('fileUploader', function ($parse) {\n    return {\n        restrict: 'A',\n        link: function (scope, element, attrs) {\n            let model = $parse(attrs.fileUploader),\n                modelSetter = model.assign;\n            element.bind('change', function () {\n                scope.$apply(function () {\n                    modelSetter(scope, element[0].files[0]);\n                });\n            });\n        }\n    };\n});\n","angular.module('vimeoApp').directive('footerDir', function () {\n    return {\n        restrict: \"AE\",\n        templateUrl: \"./views/footerDir.html\"\n    }\n});","angular.module('vimeoApp')\n.directive('navBar', function() {\n\n  return {\n    restrict: 'E',\n    templateUrl: './views/navBar.html',\n    link: function(scope){\n    },\n    controller: 'navBarCtrl'\n    }\n\n})\n","angular.module('vimeoApp').controller('accountCtrl', function ($scope) {\n\n});\n","angular.module('vimeoApp').controller('commentsCtrl', function ($scope, mainService) {\n\n  $scope.getAllComments = () => {\n    console.log('hi')\n      let id = mainService.arr[0];\n      mainService.getComments(id).then(res => {\n          $scope.comments = res.data.data;\n          console.log($scope.comments)\n      });\n  }\n  $scope.addComment = () => {\n      let id = mainService.arr[0];\n      console.log(id)\n      mainService.postComment(id, $scope.text).then(res => {\n          $scope.getAllComments();\n          $scope.text='';\n      });\n  };\n\n  $scope.getAllComments();\n\n});\n","angular.module('vimeoApp').controller('loadingCtrl', function ($scope, $timeout) {\n\n    $scope.loadB = true;\n    $scope.loadG = false;\n    $scope.loadR = false;\n\n    $timeout();\n\n    $timeout(() => {\n        $scope.loadG = true;\n    }, 500);\n\n    $timeout();\n\n    $timeout(() => {\n        $scope.loadR = true;\n    }, 1000);\n\n    $timeout();\n\n});\n","angular.module('vimeoApp').controller('mainCtrl', function ($scope, mainService, $state) {\n\n    $scope.login = () => {\n        mainService.login().then(res => {\n            $scope.data = res.data;\n        })\n    }\n    $scope.login();\n\n    $scope.playVideo = (videoLink, uri, video) => {\n        mainService.clickedVideo(videoLink);\n        mainService.transferVideo(video);\n        let id = uri.replace(/\\D/g, '');\n        mainService.getId(id);\n        $state.go('playvideo');\n    }\n\n    mainService.getVideosByChannel('staffpicks').then(res => {\n        $scope.staffpicks = res.data.data;\n    })\n});\n","angular.module('vimeoApp').controller('navBarCtrl', function ($scope, mainService, $state) {\n\n    $scope.profilePicAndUpload = false;\n    $scope.logInNavBar = true;\n    $scope.mainDropDown = true;\n\n    $scope.login = () => {\n        mainService.login().then(res => {\n            $scope.data = res.data;\n        })\n    }\n    $scope.logout = () => {\n        mainService.logout().then(res => {\n            let loggedOut = res.data;\n            $scope.logInNavBar = loggedOut;\n            $scope.profilePicAndUpload = !loggedOut;\n            $scope.mainDropDown = loggedOut;\n            $state.go('home');\n        })\n    }\n    $scope.searchQuery = query => {\n        $state.go('loading');\n        mainService.searchVideos(1, query).then(response => {\n            mainService.searchedVideo(response.data.data);\n            $state.go('search');\n            $scope.query = '';\n        })\n    }\n    $scope.getUser = () => {\n        $state.go('uploadVideo');\n        mainService.getUser().then(res => {\n        })\n    }\n    $scope.checkUser = () => {\n        mainService.getUser().then(res => {\n            if (res.data.name) {\n                $scope.logInNavBar = false;\n                $scope.profilePicture = res.data.pictures[3].link;\n                $scope.userName = res.data.name;\n                $scope.profilePicAndUpload = true;\n            }\n        })\n    }\n    $scope.checkUser();\n});\n","angular.module('vimeoApp').controller('playVideo', function ($scope, mainService, $state) {\n    let stripDuplicates = a => [...new Set(a)];\n    $scope.showButton = true;\n    $scope.video = mainService.video;\n    mainService.getVideosByChannel('staffpicks').then(res => {\n        $scope.arr2 = res.data.data;\n    });\n    $scope.getChannelVideos = () => {\n        mainService.getVideosByChannel('music').then(res => {\n            $scope.arr = res.data.data;\n            $scope.arr.unshift(mainService.arr3[0]);\n            $scope.arr = stripDuplicates($scope.arr);\n            $scope.playVideo = (videoLink, uri, video) => {\n                mainService.clickedVideo(videoLink);\n                let id = uri.replace(/\\D/g, '');\n                mainService.getId(id);\n                $scope.video = mainService.arr2[mainService.arr2.length - 1];\n                document.querySelector(\".video-window\").innerHTML = $scope.video;\n                $scope.getVideo();\n                $scope.getAllComments();\n                $scope.arr.unshift(video);\n                $scope.arr = stripDuplicates($scope.arr);\n            };\n            $scope.showMore = () => {\n                $scope.showButton = false;\n                for (let i = 0; i < $scope.arr2.length; i++) {\n                    $scope.arr.push($scope.arr2[i]);\n                };\n            };\n        });\n    };\n    $scope.getChannelVideos();\n    $scope.getVideo = () => {\n        let id = mainService.arr[0];\n        mainService.getVideoById(id).then(res => {\n            $scope.media = res.data;\n            console.log('$scope.media' , $scope.media)\n            let beforeDate = res.data.created_time,\n                date = beforeDate => {\n                    let newD = beforeDate.slice(0, 10),\n                        splitDate = newD.split(''),\n                        noDash = splitDate.filter(numb => {\n                            return numb !== '-';\n                        });\n                    let forMoment = noDash.join(\"\");\n                    $scope.momentTime = moment(forMoment, \"YYYYMMDD\").fromNow();\n                };\n            date(beforeDate);\n            $scope.dateTest = moment(\"20170601\", \"YYYYMMDD\").fromNow();\n        });\n    };\n    $scope.getVideo();\n    $scope.getAllComments = () => {\n        let id = mainService.arr[0];\n        mainService.getComments(id).then(res => {\n            $scope.comments = res.data.data;\n\n        });\n    }\n    $scope.addComment = () => {\n        let id = mainService.arr[0];\n        mainService.postComment(id, $scope.text).then(res => {\n            $scope.getAllComments();\n        });\n\n    };\n\n    $scope.getAllComments();\n\n    document.querySelector(\".video-window\").innerHTML = $scope.video;\n});\n","angular.module('vimeoApp').controller('searchCtrl', function ($scope, mainService, $state) {\n\n    let getVideos = () => {\n        $scope.videos = mainService.videoData;\n    };\n    getVideos();\n\n    $scope.getVideoID = id => {\n        mainService.getId(id);\n    };\n    $scope.playVideo = (videoLink, uri, i) => {\n        mainService.clickedVideo(videoLink);\n        let id = uri.replace(/\\D/g, '');\n        mainService.getId(id);\n        mainService.transferVideo($scope.videos[i]);\n        $state.go('playvideo');\n\n    };\n    $scope.page = num => {\n        mainService.searchVideos(num, mainService.query).then(res => {\n            $scope.videos = res.data.data;\n            console.log($scope.videos);\n        });\n    };\n    // $scope.addToWatchLaterList = () => {\n    //     mainService.getVideoById\n    //     mainService.addToWatchLater(video, id).then(res => {\n    //         console.log(res);\n    //     });\n    // };\n});\n","","angular.module('vimeoApp').controller('uploadVideoCtrl', function ($scope, mainService, $state) {\n\n    $scope.uploadVideo = () => {\n      $state.go('userVideos')\n        mainService.uploadVid($scope.video).then(res => {\n          console.log(res)\n        })\n    }\n\n});\n","angular.module('vimeoApp')\n\n.filter('firstLetter', function () {\n    return function(privacy){\n\n      var split=privacy.split(\"\");\n      var firstCap=split[0].toUpperCase();\n      var restofWord=split.splice(0,1);\n      var scope=firstCap+split.join(\"\");\n\n      return scope;\n    }\n  })\n\n  .filter('convertedTime', function() {\n    return function(time){\n            let numb=parseInt(time);\n            let minutes = Math.floor(numb / 60);\n            let seconds = numb % 60;\n\n               if(minutes===0){\n                 if(seconds.toString().length===1){\n                   return minutes+ \"0\" + \":\" + \"0\"+seconds;\n                 }\n                 return minutes + \"0\" + \":\" + seconds;\n               }\n\n              else if(seconds.toString().length===1){\n                return minutes+\":\"+\"0\"+seconds;\n               }\n               return minutes+\":\"+seconds;\n       }\n    })\n\n.controller('userVideosCtrl', function ($scope, mainService, $state) {\n    $scope.userVideos = () => {\n        mainService.userVideos().then(res => {\n            $scope.videos = res.data.data;\n        });\n    };\n    $scope.userVideos();\n\n    $scope.play = (videoLink, uri) => {\n        mainService.clickedVideo(videoLink);\n        let id = uri.replace(/\\D/g, '');\n        mainService.getId(id);\n        $state.go('playvideo');\n    };\n    $scope.displayWatchLaterList = () => {\n        let id = mainService.arr[0];\n        mainService.getVideoById(id).then(res => {\n            mainService.getWatchLaterList(res.data, id).then(resp => {\n                $scope.list = resp.data;\n            });\n        });\n    };\n    $scope.displayWatchLaterList();\n});\n"]}